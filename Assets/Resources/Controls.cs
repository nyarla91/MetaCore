//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Resources/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""c259c16c-ed4e-4a0f-8dfb-65b1d902c8ca"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""2b8d526d-d635-42b1-878e-0614f35b6800"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CoreShoot"",
                    ""type"": ""Button"",
                    ""id"": ""7061c01b-2abc-4e23-a392-eda8e7da6209"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimDirection"",
                    ""type"": ""Value"",
                    ""id"": ""717c6e28-936b-40ba-b9ce-a0d726b826c2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AimPosition"",
                    ""type"": ""Value"",
                    ""id"": ""4801d153-0506-494f-8989-e83ddc174acb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CoreReturn"",
                    ""type"": ""Button"",
                    ""id"": ""8228eccb-c205-40b0-a91e-35de0d294a18"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TeleportToCore"",
                    ""type"": ""Button"",
                    ""id"": ""7415433e-5bfd-4250-9183-8837373c5a3a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""18025786-459a-45ac-9829-d910ed20a092"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""9ed5554c-2374-4fd7-9e4b-e2707617dec9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseRepairPack"",
                    ""type"": ""Button"",
                    ""id"": ""c38202ba-eafd-40ca-829e-e200835d7ee0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseImmortalityModule"",
                    ""type"": ""Button"",
                    ""id"": ""ba2eafee-5faf-4b57-9fa6-9e98c5090971"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseCoreCharger"",
                    ""type"": ""Button"",
                    ""id"": ""36ae6ab0-1774-448a-aa46-7e8a1e6175dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseChronoBooster"",
                    ""type"": ""Button"",
                    ""id"": ""2032c7fe-9d6a-494e-a2fb-f82dbc6bca3d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CancelAim"",
                    ""type"": ""Button"",
                    ""id"": ""da23695a-0b5a-48d4-a6a4-a4d07251cba0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""f95c8662-4e85-4c61-b12f-b1c505d32e32"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""f81b1fb6-f8e2-4adc-a547-ed55c90c5eb1"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7e68f32a-7196-4466-a8ac-32a45d55a9a5"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5686d6bc-cf07-479b-8247-4d61b1679087"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""bc9789fb-fc67-42ed-b1d5-94f73d8f22a1"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4813bee9-24cc-4d53-8329-791866172eac"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""19889758-9128-4c18-bc71-ad13205945c7"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33cdc083-950d-401d-b29c-4c1276de702d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""CoreShoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63771625-619b-437f-bf59-671421c156bc"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CoreShoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11d70bde-1e0f-4352-88c3-a2c549f3d4da"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AimDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""150ec7d0-5e69-4803-b3e6-62e10adf053c"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""AimPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2cb88aa-f11b-4ace-a3f3-24b845bca01e"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""TeleportToCore"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a1619ea-36ba-443b-b0d5-86d83735b9d6"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TeleportToCore"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75a9b1d0-367b-4b12-bd06-a98f8c315a16"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1618002-c6c4-46f3-9795-3f7d501ef9c4"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68d2d927-b940-4de1-b985-0b8bbe80ac01"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a683b73-3767-43ba-9ce7-a1103bb05470"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e199eb9-b903-4d3b-bfb4-7dabf798562f"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""CoreReturn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4a671f2-9967-4710-947a-8c819d65acf5"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CoreReturn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2a534b0-3b28-4da7-ad9b-4524c1bd2b84"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""UseRepairPack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""376a8ab5-6525-4986-b25d-4e3ea9e6155c"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UseRepairPack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aaadd1fd-720c-4a3c-8b9d-47efa2c66eb1"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UseImmortalityModule"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""620db2e9-ca1e-4a9e-ace7-5ab9aec92e22"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""UseImmortalityModule"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0ed9b20-cc3c-4100-9974-eb13f41b12f5"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""UseCoreCharger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11c1ee54-3872-4b23-8d6b-1a3eb7032841"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UseCoreCharger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9da45d5d-2788-4f1a-9133-9e39033f8600"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UseChronoBooster"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94a0b641-4bff-47ce-80e9-89a8c4e0ed68"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""UseChronoBooster"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07ca9dd0-5db8-4439-aebd-ca08ee79a51f"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""CancelAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0074dc65-157b-4d35-a0dc-b0de5274c752"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc04f778-64f5-450b-96a5-cc64c07b5feb"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eff543be-f591-427b-ab76-9ca2b8107fe3"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""System"",
            ""id"": ""52f23508-30cc-4ae5-827d-d172f427881b"",
            ""actions"": [
                {
                    ""name"": ""SwitchToKeyboardMouse"",
                    ""type"": ""Button"",
                    ""id"": ""7476468e-b8b6-40b8-a002-473269145174"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToGamepad"",
                    ""type"": ""Button"",
                    ""id"": ""523584e0-809e-4ea2-a245-849e9ce18cd9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c3c3fead-ba15-4ad5-907e-1ed4ba2b0795"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse;Gamepad"",
                    ""action"": ""SwitchToKeyboardMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bacb185e-22b6-4b68-adef-afb35695c4ed"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse;Gamepad"",
                    ""action"": ""SwitchToKeyboardMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4bbfc3c9-7699-4eda-b965-19727519df48"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse;Gamepad"",
                    ""action"": ""SwitchToKeyboardMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9943c58-882f-4bc2-a3e4-e0c8757b2294"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;KeyboardMouse"",
                    ""action"": ""SwitchToKeyboardMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b62f6404-1e70-4b26-9537-f833cfdb9445"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToKeyboardMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""474240d5-3e6c-469c-a5ac-ec173f30216a"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToKeyboardMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2e96a5d-9683-4777-84b4-09c1ed5b3ab0"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse;Gamepad"",
                    ""action"": ""SwitchToGamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7a46b89-1d2b-4960-a50a-8302207f084c"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse;Gamepad"",
                    ""action"": ""SwitchToGamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""021bb291-4204-4f3e-81a6-e77baab484bd"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse;Gamepad"",
                    ""action"": ""SwitchToGamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54d77940-7f24-4b89-aaed-ba5c4d7cfb91"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse;Gamepad"",
                    ""action"": ""SwitchToGamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27768e71-2303-4bc4-a799-5f482085cb38"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;KeyboardMouse"",
                    ""action"": ""SwitchToGamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""4db2a7b5-ebf8-4a64-bf2a-4d0182fc49a4"",
            ""actions"": [
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""811e2bf6-b278-404b-96d3-8c159ba17de5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""acdb837c-ec5d-4d2e-8e22-b86564fef037"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NeverShow"",
                    ""type"": ""Button"",
                    ""id"": ""897abb9e-0046-4ad8-a639-2ef0d3d1f4ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""132f8cd3-929d-4da0-837e-2b17e8ba5665"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c45f810-ec9d-4ff9-81f5-bff98ae06ba2"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca643cb9-db75-4261-9d82-c39005cf7876"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""948fbf01-3a79-4ee3-a6c4-8536d7497efa"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a397ce6e-550f-4457-a100-cbf10e14b238"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NeverShow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64a37fd9-f06f-4314-86d8-f3d0947fc768"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NeverShow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardMouse"",
            ""bindingGroup"": ""KeyboardMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Move = m_Gameplay.FindAction("Move", throwIfNotFound: true);
        m_Gameplay_CoreShoot = m_Gameplay.FindAction("CoreShoot", throwIfNotFound: true);
        m_Gameplay_AimDirection = m_Gameplay.FindAction("AimDirection", throwIfNotFound: true);
        m_Gameplay_AimPosition = m_Gameplay.FindAction("AimPosition", throwIfNotFound: true);
        m_Gameplay_CoreReturn = m_Gameplay.FindAction("CoreReturn", throwIfNotFound: true);
        m_Gameplay_TeleportToCore = m_Gameplay.FindAction("TeleportToCore", throwIfNotFound: true);
        m_Gameplay_Attack = m_Gameplay.FindAction("Attack", throwIfNotFound: true);
        m_Gameplay_Dash = m_Gameplay.FindAction("Dash", throwIfNotFound: true);
        m_Gameplay_UseRepairPack = m_Gameplay.FindAction("UseRepairPack", throwIfNotFound: true);
        m_Gameplay_UseImmortalityModule = m_Gameplay.FindAction("UseImmortalityModule", throwIfNotFound: true);
        m_Gameplay_UseCoreCharger = m_Gameplay.FindAction("UseCoreCharger", throwIfNotFound: true);
        m_Gameplay_UseChronoBooster = m_Gameplay.FindAction("UseChronoBooster", throwIfNotFound: true);
        m_Gameplay_CancelAim = m_Gameplay.FindAction("CancelAim", throwIfNotFound: true);
        m_Gameplay_Interact = m_Gameplay.FindAction("Interact", throwIfNotFound: true);
        // System
        m_System = asset.FindActionMap("System", throwIfNotFound: true);
        m_System_SwitchToKeyboardMouse = m_System.FindAction("SwitchToKeyboardMouse", throwIfNotFound: true);
        m_System_SwitchToGamepad = m_System.FindAction("SwitchToGamepad", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
        m_Menu_Confirm = m_Menu.FindAction("Confirm", throwIfNotFound: true);
        m_Menu_Cancel = m_Menu.FindAction("Cancel", throwIfNotFound: true);
        m_Menu_NeverShow = m_Menu.FindAction("NeverShow", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Move;
    private readonly InputAction m_Gameplay_CoreShoot;
    private readonly InputAction m_Gameplay_AimDirection;
    private readonly InputAction m_Gameplay_AimPosition;
    private readonly InputAction m_Gameplay_CoreReturn;
    private readonly InputAction m_Gameplay_TeleportToCore;
    private readonly InputAction m_Gameplay_Attack;
    private readonly InputAction m_Gameplay_Dash;
    private readonly InputAction m_Gameplay_UseRepairPack;
    private readonly InputAction m_Gameplay_UseImmortalityModule;
    private readonly InputAction m_Gameplay_UseCoreCharger;
    private readonly InputAction m_Gameplay_UseChronoBooster;
    private readonly InputAction m_Gameplay_CancelAim;
    private readonly InputAction m_Gameplay_Interact;
    public struct GameplayActions
    {
        private @Controls m_Wrapper;
        public GameplayActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Gameplay_Move;
        public InputAction @CoreShoot => m_Wrapper.m_Gameplay_CoreShoot;
        public InputAction @AimDirection => m_Wrapper.m_Gameplay_AimDirection;
        public InputAction @AimPosition => m_Wrapper.m_Gameplay_AimPosition;
        public InputAction @CoreReturn => m_Wrapper.m_Gameplay_CoreReturn;
        public InputAction @TeleportToCore => m_Wrapper.m_Gameplay_TeleportToCore;
        public InputAction @Attack => m_Wrapper.m_Gameplay_Attack;
        public InputAction @Dash => m_Wrapper.m_Gameplay_Dash;
        public InputAction @UseRepairPack => m_Wrapper.m_Gameplay_UseRepairPack;
        public InputAction @UseImmortalityModule => m_Wrapper.m_Gameplay_UseImmortalityModule;
        public InputAction @UseCoreCharger => m_Wrapper.m_Gameplay_UseCoreCharger;
        public InputAction @UseChronoBooster => m_Wrapper.m_Gameplay_UseChronoBooster;
        public InputAction @CancelAim => m_Wrapper.m_Gameplay_CancelAim;
        public InputAction @Interact => m_Wrapper.m_Gameplay_Interact;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                @CoreShoot.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCoreShoot;
                @CoreShoot.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCoreShoot;
                @CoreShoot.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCoreShoot;
                @AimDirection.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAimDirection;
                @AimDirection.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAimDirection;
                @AimDirection.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAimDirection;
                @AimPosition.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAimPosition;
                @AimPosition.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAimPosition;
                @AimPosition.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAimPosition;
                @CoreReturn.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCoreReturn;
                @CoreReturn.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCoreReturn;
                @CoreReturn.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCoreReturn;
                @TeleportToCore.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTeleportToCore;
                @TeleportToCore.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTeleportToCore;
                @TeleportToCore.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTeleportToCore;
                @Attack.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAttack;
                @Dash.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDash;
                @UseRepairPack.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUseRepairPack;
                @UseRepairPack.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUseRepairPack;
                @UseRepairPack.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUseRepairPack;
                @UseImmortalityModule.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUseImmortalityModule;
                @UseImmortalityModule.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUseImmortalityModule;
                @UseImmortalityModule.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUseImmortalityModule;
                @UseCoreCharger.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUseCoreCharger;
                @UseCoreCharger.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUseCoreCharger;
                @UseCoreCharger.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUseCoreCharger;
                @UseChronoBooster.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUseChronoBooster;
                @UseChronoBooster.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUseChronoBooster;
                @UseChronoBooster.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUseChronoBooster;
                @CancelAim.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCancelAim;
                @CancelAim.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCancelAim;
                @CancelAim.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCancelAim;
                @Interact.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteract;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @CoreShoot.started += instance.OnCoreShoot;
                @CoreShoot.performed += instance.OnCoreShoot;
                @CoreShoot.canceled += instance.OnCoreShoot;
                @AimDirection.started += instance.OnAimDirection;
                @AimDirection.performed += instance.OnAimDirection;
                @AimDirection.canceled += instance.OnAimDirection;
                @AimPosition.started += instance.OnAimPosition;
                @AimPosition.performed += instance.OnAimPosition;
                @AimPosition.canceled += instance.OnAimPosition;
                @CoreReturn.started += instance.OnCoreReturn;
                @CoreReturn.performed += instance.OnCoreReturn;
                @CoreReturn.canceled += instance.OnCoreReturn;
                @TeleportToCore.started += instance.OnTeleportToCore;
                @TeleportToCore.performed += instance.OnTeleportToCore;
                @TeleportToCore.canceled += instance.OnTeleportToCore;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @UseRepairPack.started += instance.OnUseRepairPack;
                @UseRepairPack.performed += instance.OnUseRepairPack;
                @UseRepairPack.canceled += instance.OnUseRepairPack;
                @UseImmortalityModule.started += instance.OnUseImmortalityModule;
                @UseImmortalityModule.performed += instance.OnUseImmortalityModule;
                @UseImmortalityModule.canceled += instance.OnUseImmortalityModule;
                @UseCoreCharger.started += instance.OnUseCoreCharger;
                @UseCoreCharger.performed += instance.OnUseCoreCharger;
                @UseCoreCharger.canceled += instance.OnUseCoreCharger;
                @UseChronoBooster.started += instance.OnUseChronoBooster;
                @UseChronoBooster.performed += instance.OnUseChronoBooster;
                @UseChronoBooster.canceled += instance.OnUseChronoBooster;
                @CancelAim.started += instance.OnCancelAim;
                @CancelAim.performed += instance.OnCancelAim;
                @CancelAim.canceled += instance.OnCancelAim;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);

    // System
    private readonly InputActionMap m_System;
    private ISystemActions m_SystemActionsCallbackInterface;
    private readonly InputAction m_System_SwitchToKeyboardMouse;
    private readonly InputAction m_System_SwitchToGamepad;
    public struct SystemActions
    {
        private @Controls m_Wrapper;
        public SystemActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @SwitchToKeyboardMouse => m_Wrapper.m_System_SwitchToKeyboardMouse;
        public InputAction @SwitchToGamepad => m_Wrapper.m_System_SwitchToGamepad;
        public InputActionMap Get() { return m_Wrapper.m_System; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SystemActions set) { return set.Get(); }
        public void SetCallbacks(ISystemActions instance)
        {
            if (m_Wrapper.m_SystemActionsCallbackInterface != null)
            {
                @SwitchToKeyboardMouse.started -= m_Wrapper.m_SystemActionsCallbackInterface.OnSwitchToKeyboardMouse;
                @SwitchToKeyboardMouse.performed -= m_Wrapper.m_SystemActionsCallbackInterface.OnSwitchToKeyboardMouse;
                @SwitchToKeyboardMouse.canceled -= m_Wrapper.m_SystemActionsCallbackInterface.OnSwitchToKeyboardMouse;
                @SwitchToGamepad.started -= m_Wrapper.m_SystemActionsCallbackInterface.OnSwitchToGamepad;
                @SwitchToGamepad.performed -= m_Wrapper.m_SystemActionsCallbackInterface.OnSwitchToGamepad;
                @SwitchToGamepad.canceled -= m_Wrapper.m_SystemActionsCallbackInterface.OnSwitchToGamepad;
            }
            m_Wrapper.m_SystemActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SwitchToKeyboardMouse.started += instance.OnSwitchToKeyboardMouse;
                @SwitchToKeyboardMouse.performed += instance.OnSwitchToKeyboardMouse;
                @SwitchToKeyboardMouse.canceled += instance.OnSwitchToKeyboardMouse;
                @SwitchToGamepad.started += instance.OnSwitchToGamepad;
                @SwitchToGamepad.performed += instance.OnSwitchToGamepad;
                @SwitchToGamepad.canceled += instance.OnSwitchToGamepad;
            }
        }
    }
    public SystemActions @System => new SystemActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private IMenuActions m_MenuActionsCallbackInterface;
    private readonly InputAction m_Menu_Confirm;
    private readonly InputAction m_Menu_Cancel;
    private readonly InputAction m_Menu_NeverShow;
    public struct MenuActions
    {
        private @Controls m_Wrapper;
        public MenuActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Confirm => m_Wrapper.m_Menu_Confirm;
        public InputAction @Cancel => m_Wrapper.m_Menu_Cancel;
        public InputAction @NeverShow => m_Wrapper.m_Menu_NeverShow;
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void SetCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterface != null)
            {
                @Confirm.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnConfirm;
                @Confirm.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnConfirm;
                @Confirm.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnConfirm;
                @Cancel.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnCancel;
                @NeverShow.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnNeverShow;
                @NeverShow.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnNeverShow;
                @NeverShow.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnNeverShow;
            }
            m_Wrapper.m_MenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Confirm.started += instance.OnConfirm;
                @Confirm.performed += instance.OnConfirm;
                @Confirm.canceled += instance.OnConfirm;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @NeverShow.started += instance.OnNeverShow;
                @NeverShow.performed += instance.OnNeverShow;
                @NeverShow.canceled += instance.OnNeverShow;
            }
        }
    }
    public MenuActions @Menu => new MenuActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardMouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IGameplayActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnCoreShoot(InputAction.CallbackContext context);
        void OnAimDirection(InputAction.CallbackContext context);
        void OnAimPosition(InputAction.CallbackContext context);
        void OnCoreReturn(InputAction.CallbackContext context);
        void OnTeleportToCore(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnUseRepairPack(InputAction.CallbackContext context);
        void OnUseImmortalityModule(InputAction.CallbackContext context);
        void OnUseCoreCharger(InputAction.CallbackContext context);
        void OnUseChronoBooster(InputAction.CallbackContext context);
        void OnCancelAim(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
    }
    public interface ISystemActions
    {
        void OnSwitchToKeyboardMouse(InputAction.CallbackContext context);
        void OnSwitchToGamepad(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
        void OnConfirm(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnNeverShow(InputAction.CallbackContext context);
    }
}
